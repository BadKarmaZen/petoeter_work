<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


	<!-- Resource dictionary entries should be defined here. -->

	<Style x:Key="LabelTitleStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="Comic Sans MS"/>
		<Setter Property="FontSize" Value="50"/>
	</Style>

	<Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="Comic Sans MS"/>
		<Setter Property="FontSize" Value="29.333"/>
	</Style>

	<Style x:Key="LabelInfoStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="Comic Sans MS"/>
		<Setter Property="FontSize" Value="18"/>
	</Style>

	<Style x:Key="GroupBoxHeaderStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="Comic Sans MS"/>
		<Setter Property="FontSize" Value="22"/>
	</Style>

	<!--FontFamily="Comic Sans MS" FontSize="22"-->
	<Style x:Key="TextBoxStyle" TargetType="TextBox">
		<Setter Property="FontFamily" Value="Comic Sans MS"/>
		<Setter Property="FontSize" Value="29.333"/>
	</Style>

	<Style x:Key="ButtonStyle"  TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#373737" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="15" />
		<Setter Property="SnapsToDevicePixels" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border CornerRadius="15" Background="{TemplateBinding Background}">
						<Grid>
							<ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#E59400" />
							<Setter Property="Foreground" Value="White" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="OrangeRed" />
							<Setter Property="Foreground" Value="White" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type GroupBox}">
		<!--<Setter Property="Foreground" Value="WhiteSmoke" />-->


		<!--<Setter Property="BorderBrush" Value="#D5DFE5" />#FF042271" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
		
		<Setter Property="FontFamily" Value="Trebuchet MS" />
		<Setter Property="FontSize" Value="12" />-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">

					<Grid SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<Border BorderBrush="Black" BorderThickness="1" CornerRadius="5,5,0,0" Padding="5,0" Background="Orange" >
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"
									RecognizesAccessKey="True" Margin="0,4,0,2" TextElement.FontWeight="Bold" />
						</Border>

						<Border Grid.Row="1" BorderBrush="Black" BorderThickness="1,0,1,1" Margin="0" CornerRadius="0,0,5,5" Padding="4"
								Background="WhiteSmoke">

							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="DayScheduleBrush" Color="#FF852323"/>

	<Style x:Key="LargeCalendarStyle" TargetType="{x:Type Calendar}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Calendar}">
					<Viewbox Height="400" Width="400">
						<CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SliderThumb" TargetType="Thumb">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Ellipse Height="10" Width="10" Fill="Green"></Ellipse>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- x:Key="CheckBoxStyle" -->
	<Style  TargetType="{x:Type CheckBox}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Height" Value="30" />
		<Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisualStyte}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator>
						<BulletDecorator.Bullet>
							<Grid Height="{TemplateBinding Height}" Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                              MinHeight="30" MinWidth="30" ShowGridLines="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="4*" />
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="4*" />
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="1*" />
									<ColumnDefinition Width="2*" />
									<ColumnDefinition Width="2*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="3*" />
									<RowDefinition Height="1*" />
									<RowDefinition Height="1*" />
									<RowDefinition Height="1*" />
									<RowDefinition Height="4*" />
									<RowDefinition Height="1*" />
									<RowDefinition Height="1*" />
									<RowDefinition Height="4*" />
								</Grid.RowDefinitions>

								<Border Name="MainBorder"
                                    Grid.ColumnSpan="9" Grid.RowSpan="9"
                                    CornerRadius="4"
                                    BorderThickness="1"
                                    Background="Transparent" />

								<Border Name="InnerBorder"
                                    Grid.Column="1" Grid.ColumnSpan="5"
                                    Grid.Row="2" Grid.RowSpan="5"
                                    BorderThickness="1"
                                    BorderBrush="#808080" />

								<Path Name="InnerPath"
                                  Grid.Column="1" Grid.ColumnSpan="5"
                                  Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75"
                                  Stretch="Fill" Stroke="#808080"/>

								<Path Name="CheckMark"
                                  Grid.Column="2" Grid.ColumnSpan="5"
                                  Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0"
                                  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Fill="#373737"
                                  Stretch="Fill"
                                  Stroke="#373737" />

								<Path Name="InderminateMark"
                                  Grid.Column="3"
                                  Grid.Row="4"
                                  Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  Fill="#808080" />
							</Grid>
						</BulletDecorator.Bullet>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" >
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        RecognizesAccessKey="True" />
					</BulletDecorator>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="MainBorder" Property="Background" Value="#FFEE9449" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="CheckMark" Property="Fill" Value="#FF804D15" />
							<Setter TargetName="CheckMark" Property="Stroke" Value="#FF804D15" />
							<Setter TargetName="InnerPath" Property="Stroke" Value="#FF804D15" />
							<Setter TargetName="InderminateMark" Property="Fill" Value="#FF804D15" />
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#FF804D15" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>